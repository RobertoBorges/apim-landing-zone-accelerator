name: roborges/apiops-demo
on:
  workflow_dispatch:
jobs:
  validate_bicep-validate_bicep:
    name: Validate Bicep files
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - uses: actions/checkout@v3.5.0
      with:
        repository: RobertoBorges/apim-landing-zone-accelerator
        token: "${{ secrets.CHECKOUT_TOKEN }}"
    - name: Validate bicep against the subscription
      uses: azure/login@v1.4.6
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
    - name: Validate bicep against the subscription
      run: |-
        $ErrorActionPreference = 'stop'
        echo validating bicep
        az deployment sub validate --location ${{ env.deploymentLocation }} --output table --template-file main.bicep --parameters workloadName=${{ env.workloadName }} environment=${{ env.environment }} vmUsername=${{ env.vmUsername }} vmPassword=${{ env.vmPassword }} accountName=${{ env.sourceControlaccountName }} personalAccessToken=${{ env.personalAccessToken }} CICDAgentType=${{ env.CICDAgentType }} appGatewayFqdn=${{ env.appGatewayFqdn }} certificatePassword=${{ env.certificatePassword }} appGatewayCertType=${{ env.appGatewayCertType }}
        if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) { exit $LASTEXITCODE }
      shell: pwsh
      working-directory: "./reference-implementations/AppGW-IAPIM-Func/bicep"
  build_and_deploy:
    name: Deploy APIM ESLZ artifacts to Azure subscription
    needs:
    - validate_bicep-validate_bicep
    runs-on: ubuntu-latest
    environment:
      name: apim-dev
    if: github.RUN_NUMBER == 1
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - name: download artifact
      uses: actions/download-artifact@v3.0.1
    - uses: actions/checkout@v3.5.0
      with:
        repository: RobertoBorges/apim-landing-zone-accelerator
        token: "${{ secrets.CHECKOUT_TOKEN }}"
    - name: Deploy azure resources
      uses: azure/login@v1.4.6
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
    - name: Deploy azure resources
      run: |-
        $ErrorActionPreference = 'stop'
        echo "Deploying to ${{ env.deploymentLocation }} with name prefix ${{ env.workloadName }} and environment tag ${{ env.environment }}"
        az deployment sub create --name APIM-${{ env.workloadName }}-${{ env.environment }} --no-wait --location ${{ env.deploymentLocation }} --template-file main.bicep --parameters workloadName=${{ env.workloadName }} environment=${{ env.environment }} vmUsername=${{ env.vmUsername }} vmPassword=${{ env.vmPassword }} accountName=${{ env.sourceControlaccountName }} poolName=${{ env.poolName }} personalAccessToken=${{ env.personalAccessToken }} CICDAgentType=${{ env.CICDAgentType }} appGatewayFqdn=${{ env.appGatewayFqdn }} certificatePassword=${{ env.certificatePassword }} appGatewayCertType=${{ env.appGatewayCertType }}
        echo "Deployment triggered, check the status under deployment on the subscriptions $(az account show --query 'name') with deployment name APIM-${{ env.workloadName }}-${{ env.environment }}"
        if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) { exit $LASTEXITCODE }
      shell: pwsh
      working-directory: "./reference-implementations/AppGW-IAPIM-Func/bicep"
